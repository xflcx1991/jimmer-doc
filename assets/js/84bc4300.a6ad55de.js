"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[677],{15227:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>x,contentTitle:()=>u,default:()=>m,frontMatter:()=>h,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"mutation/save-command/investigation","title":"Constraint Violation Error Handling","description":"Concepts","source":"@site/docs/mutation/save-command/investigation.mdx","sourceDirName":"mutation/save-command","slug":"/mutation/save-command/investigation","permalink":"/jimmer-doc/docs/mutation/save-command/investigation","draft":false,"unlisted":false,"editUrl":"https://github.com/babyfish-ct/jimmer-doc/edit/main/docs/mutation/save-command/investigation.mdx","tags":[],"version":"current","lastUpdatedAt":1734792507000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Constraint Violation Error Handling"},"sidebar":"tutorialSidebar","previous":{"title":"Dissociation Operations","permalink":"/jimmer-doc/docs/mutation/save-command/association/dissociation"},"next":{"title":"Optimistic Locking","permalink":"/jimmer-doc/docs/mutation/save-command/optimistic-locking"}}');var a=t(74848),s=t(28453),l=t(11470),o=t(19365);function r(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public void addBookStore(String name) {\n\n    BookTable table = BookTable.$;\n    boolean exists = sqlClient.createQuery(table)\n        .where(table.name().eq(name))\n        .exists();\n    if (exists) {\n        throw new IllegalArgumentException(\n            "Cannot create new book store \\"\n            name +\n            \\" because it already exists"\n        );\n    }\n\n    return sqlClient.insert(\n        Immutables.createBookStore(draft -> {\n            draft.setName(name);\n        })\n    );\n}\n'})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'fun addBookStore(name: String) {\n\n    val exists = sqlCient.createQuery(BookStore::class) {\n        where(table.name eq name)\n        select(table)\n    }.exists()\n    if (exists) {\n        throw IllegalArgumentException(\n            "Cannot create new book store \\"\n            name +\n            \\" because it already exists"\n        )\n    }\n\n    sqlCient.insert(\n        BookStore {\n            name = name\n        }\n    )\n}\n'})})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}var d=t(74400);const h={sidebar_position:5,title:"Constraint Violation Error Handling"},u=void 0,x={},p=[{value:"Concepts",id:"concepts",level:2},{value:"Checking for Id Conflicts",id:"checking-for-id-conflicts",level:2},{value:"Checking for Key Conflicts",id:"checking-for-key-conflicts",level:2},{value:"Fake Foreign Keys",id:"fake-foreign-keys",level:3},{value:"Real Foreign Keys",id:"real-foreign-keys",level:3},{value:"User Exception Translator",id:"user-exception-translator",level:2},{value:"Exception Translation Interface",id:"exception-translation-interface",level:3},{value:"Multiple Registration Methods",id:"multiple-registration-methods",level:3},{value:"Implementing the <code>translate</code> Method",id:"implementing-the-translate-method",level:3}];function g(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"concepts",children:"Concepts"}),"\n",(0,a.jsx)(n.p,{children:"In daily project development, there is a very challenging issue: translating database constraint violation errors into user-friendly error messages."}),"\n",(0,a.jsx)(n.p,{children:"Based on constraints that cannot be simply validated through input validation, databases have three types of constraints that are difficult to handle when violated:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Primary key constraints"}),"\n",(0,a.jsxs)(n.li,{children:["Unique constraints ",(0,a.jsx)(n.em,{children:"(or unique indexes)"})]}),"\n",(0,a.jsx)(n.li,{children:"Foreign key constraints"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["To standardize across different database products, the SQL standard specifies that errors caused by constraint violations have the category code ",(0,a.jsxs)(n.a,{href:"https://en.wikipedia.org/wiki/SQLSTATE",children:["23 ",(0,a.jsx)(n.em,{children:"(integrity constraint violation)"})]}),". All related error states begin with ",(0,a.jsx)(n.code,{children:"23"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"However, standardization ends there. For more detailed issues, such as:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Which constraint was violated"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"How to get the table name and column name from the database dictionary based on the constraint name"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Most importantly, which data row modification action caused the exception"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Different database products behave inconsistently and lack clear APIs to obtain this information."}),"\n",(0,a.jsxs)(n.p,{children:["To provide users with clear error descriptions, many business projects adopt a simple but crude method: ",(0,a.jsx)(d.l,{buttonText:"pre-checking through queries",size:"small",children:(0,a.jsx)(c,{})})," to determine if the upcoming operation is safe before execution."]}),"\n",(0,a.jsx)(n.p,{children:"However, this pre-checking approach has many disadvantages:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Developers need to write various pre-checking code repeatedly, leading to high development costs"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Only suitable for simple single-record DML modifications, completely unsuitable for advanced operations like save commands that recursively save deep data structures in batch"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Poor performance, as errors are rare events, and pre-checking every time is wasteful"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Therefore, Jimmer adopts the following strategy:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Uses post-investigation approach, directly modifying the database first, and if constraint violation errors are reported, investigating the cause afterward"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"During error investigation, uses queries to gather as much information as possible, reporting:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"The path of the illegal object in the saved data structure"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"The entity type and related properties that caused the error"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"The specific object and related data that caused the error"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Allows users to customize exception translators to further translate Jimmer's investigated exceptions into end-user friendly messages"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsx)(n.p,{children:"The database error investigation can occur due to either root object save failure or associated object save failure. Jimmer treats both cases equally, without distinction."}),(0,a.jsxs)(n.p,{children:["However, to simplify the documentation, the examples in this article demonstrate saving relatively simple objects, avoiding deep data structures ",(0,a.jsx)(n.em,{children:"(in fact, if saving deep associated objects fails, it will be investigated the same way)"}),"."]})]}),"\n",(0,a.jsx)(n.h2,{id:"checking-for-id-conflicts",children:"Checking for Id Conflicts"}),"\n",(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'List<Book> books = Arrays.asList(\n    Immutables.createBook(draft -> {\n        draft.setId(100L);\n        draft.setName("SQL in Action");\n        draft.setEdition(1);\n        draft.setPrice(new BigDecimal("59.9"));\n        draft.setStoreId(2L);\n    }),\n    Immutables.createBook(draft -> {\n        // highlight-next-line\n        draft.setId(7L); // Exists\n        draft.setName("LINQ in Action");\n        draft.setEdition(3);\n        draft.setPrice(new BigDecimal("49.9"));\n        draft.setStoreId(2L);\n    })\n);\n\nsqlClient.insertEntities(books);\n'})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val books = listOf(\n    Book { \n        id = 100L\n        name = "SQL in Action"\n        edition = 1\n        price = BigDecimal("59.9")\n        storeId = 2L\n    },\n    Book {\n        // highlight-next-line\n        id = 7L // Exists\n        name = "LINQ in Action"\n        edition = 3\n        price = BigDecimal("49.9")\n        storeId = 2L\n    }\n)\n\nsqlClient.insertEntities(books)\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"This code will generate the following two SQL statements:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Batch insert data"}),"\n",(0,a.jsxs)(l.A,{groupId:"database",children:[(0,a.jsx)(o.A,{value:"h2",label:"Most Databases",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"insert into BOOK(\n    ID, NAME, EDITION, PRICE, STORE_ID\n) values(?, ?, ?, ?, ?)\n/* batch-0: [100, SQL in Action, 1, 59.9, 2] */\n-- highlight-next-line\n/* batch-1: [7, LINQ in Action, 3, 49.9, 2] */\n"})})}),(0,a.jsxs)(o.A,{value:"mysql",label:"Mysql",children:[(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:["By default, MySQL batch operations are not used.\nFor specific details, please refer to ",(0,a.jsx)(n.a,{href:"./mysql",children:"MySQL Issues"})]})}),(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"insert into BOOK(\n    ID, NAME, EDITION, PRICE, STORE_ID\n) values(\n    ? /* 100 */, \n    ? /* SQL in Action */, \n    ? /* 1 */, \n    ? /* 59.9 */, \n    ? /* 2  */\n)\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"insert into BOOK(\n    ID, NAME, EDITION, PRICE, STORE_ID\n) values(\n    -- highlight-next-line\n    ? /* 7 */, \n    ? /* LINQ in Action */, \n    ? /* 3 */, \n    ? /* 49.9 */, \n    ? /* 2  */\n)\n"})}),"\n"]}),"\n"]})]})]}),"\n",(0,a.jsxs)(n.p,{children:["Here, inserting the second record will cause an ",(0,a.jsx)(n.code,{children:"id"})," conflict"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Investigate the cause of the constraint violation"}),"\n",(0,a.jsxs)(l.A,{groupId:"database",children:[(0,a.jsx)(o.A,{value:"scenario-1",label:"Scenario 1",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- highlight-next-line\nPurpose: COMMAND(INVESTIGATE_CONSTRAINT_VIOLATION_ERROR)\nSQL: select\n    tb_1_.ID\nfrom BOOK tb_1_\nwhere\n    tb_1_.ID = ? /* 7 */\n"})})}),(0,a.jsx)(o.A,{value:"scenario-2",label:"Scenario 2",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- highlight-next-line\nPurpose: COMMAND(INVESTIGATE_CONSTRAINT_VIOLATION_ERROR)\nSQL: select\n    tb_1_.ID\nfrom BOOK tb_1_\nwhere\n    tb_1_.ID = any(? /* [100, 7] */)\n"})})})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Scenario 1"}),"\n",(0,a.jsxs)(n.p,{children:["The row violated the constraint can be located by the ",(0,a.jsx)(n.code,{children:"java.sql.BatchUpdateException"})," thrown by batch operation,\nso only the error row needs to be investigatd"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Scenario 2"}),"\n",(0,a.jsxs)(n.p,{children:["The row violated the constraint can not be located by the ",(0,a.jsx)(n.code,{children:"java.sql.BatchUpdateException"})," thrown by batch operation,\nso all rows need to be investigatd"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Postgres and MySQL with batch capabilities enabled (see ",(0,a.jsx)(n.a,{href:"./mysql",children:"MySQL Issues"}),") both fall into this scenario"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Either way, Jimmer can investigate and identify the problem."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Finally, Jimmer will throw an exception based on the investigation results:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'#highlight-next-line\norg.babyfish.jimmer.sql.exception.SaveException$NotUnique: \n    Save error caused by the path: "<root>": \n    Cannot save the entity, the value of the id property \n    "com.yourcompany.yourpoject.model.Book.id" \n    #highlight-next-line\n    is "7" which already exists\n'})}),"\n",(0,a.jsx)(n.h2,{id:"checking-for-key-conflicts",children:"Checking for Key Conflicts"}),"\n",(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'List<Book> books = Arrays.asList(\n    Immutables.createBook(draft -> {\n        draft.setId(11L);\n        draft.setName("GraphQL in Action");\n        draft.setEdition(4);\n    }),\n    Immutables.createBook(draft -> {\n        draft.setId(12L); \n        // highlight-next-line\n        draft.setName("GraphQL in Action"); // `name + edition` exists\n        // highlight-next-line\n        draft.setEdition(1); // `name + edition` exists\n    })\n);\n\nsqlClient.updateEntities(books);\n'})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val books = listOf(\n    Book { \n        id = 11L\n        name = "GraphQL in Action"\n        edition = 4\n    },\n    Book {\n        id = 12\n        // highlight-next-line\n        name = "GraphQL in Action" // `name + edition` exists\n        // highlight-next-line\n        edition = 1 // `name + edition` exists\n    }\n)\n\nsqlClient.updateEntities(books)\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"This code will generate the following two SQL statements:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Batch update data"}),"\n",(0,a.jsxs)(l.A,{groupId:"database",children:[(0,a.jsx)(o.A,{value:"h2",label:"Most Databases",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"update BOOK\nset\n    NAME = ?,\n    EDITION = ?\nwhere\n    ID = ?\n/* batch-0: [GraphQL in Action, 4, 11] */\n-- highlight-next-line\n/* batch-1: [GraphQL in Action, 1, 12] */\n"})})}),(0,a.jsxs)(o.A,{value:"mysql",label:"Mysql",children:[(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:["By default, MySQL batch operations are not used.\nFor specific details, please refer to ",(0,a.jsx)(n.a,{href:"./mysql",children:"MySQL Issues"})]})}),(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"update BOOK\nset\n    NAME = ? /* GraphQL in Action */,\n    EDITION = ? /* 4 */\nwhere\n    ID = ? /* 11 */\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"update BOOK\nset\n    -- highlight-start\n    NAME = ? /* GraphQL in Action */,\n    EDITION = ? /* 1 */\n    -- highlight-end\nwhere\n    ID = ? /* 12 */\n"})}),"\n"]}),"\n"]})]})]}),"\n",(0,a.jsxs)(n.p,{children:["Here, modifying the second record will cause a conflict with the combination of ",(0,a.jsx)(n.code,{children:"name"})," and ",(0,a.jsx)(n.code,{children:"edition"})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Investigate the cause of the constraint violation"}),"\n",(0,a.jsxs)(l.A,{groupId:"database",children:[(0,a.jsx)(o.A,{value:"scenario-1",label:"Scenario 1",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- highlight-next-line\nPurpose: COMMAND(INVESTIGATE_CONSTRAINT_VIOLATION_ERROR)\nselect\n    tb_1_.ID\nfrom BOOK tb_1_\nwhere\n    (tb_1_.NAME, tb_1_.EDITION) = (\n        ? /* GraphQL in Action */, ? /* 4 */\n    )\n"})})}),(0,a.jsx)(o.A,{value:"scenario-2",label:"Scenario 2",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- highlight-next-line\nPurpose: COMMAND(INVESTIGATE_CONSTRAINT_VIOLATION_ERROR)\nSQL: select\n    tb_1_.ID,\n    tb_1_.NAME,\n    tb_1_.EDITION\nfrom BOOK tb_1_\nwhere\n    (tb_1_.NAME, tb_1_.EDITION) in (\n        (? /* GraphQL in Action */, ? /* 4 */), \n        (? /* GraphQL in Action */, ? /* 1 */)\n    )\n"})})})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Scenario 1"}),"\n",(0,a.jsxs)(n.p,{children:["The row violated the constraint can be located by the ",(0,a.jsx)(n.code,{children:"java.sql.BatchUpdateException"})," thrown by batch operation,\nso only the error row needs to be investigatd"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Scenario 2"}),"\n",(0,a.jsxs)(n.p,{children:["The row violated the constraint can not be located by the ",(0,a.jsx)(n.code,{children:"java.sql.BatchUpdateException"})," thrown by batch operation,\nso all rows need to be investigatd"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Postgres and MySQL with batch capabilities enabled (see ",(0,a.jsx)(n.a,{href:"./mysql",children:"MySQL Issues"}),") both fall into this scenario"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Either way, Jimmer can investigate and identify the problem."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Finally, Jimmer will throw an exception based on the investigation results:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'#lighlight-next-line\norg.babyfish.jimmer.sql.exception.SaveException$NotUnique: \n    Save error caused by the path: "<root>": \n    Cannot save the entity, the value of the key properties "[\n        com.yourcompany.yourproject.model.Book.name, \n        com.yourcompany.yourproject.Book.edition\n    #highlight-start\n    ]" are "Tuple2(\n        _1=GraphQL in Action, \n        _2=1\n    )" which already exists\n    #highlight-end\n'})}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsxs)(n.p,{children:["In the ",(0,a.jsx)(n.a,{href:"../../mapping/advanced/key",children:"Mapping/Advanced Mapping/Key"})," article, we introduced that entities can be configured with multiple unique constraints ",(0,a.jsx)(n.em,{children:"(or unique indexes)"})," ",(0,a.jsx)(n.em,{children:"(in fact, this documentation has not been modified yet)"}),"."]}),(0,a.jsxs)(n.p,{children:["If an entity has more than one unique constraint ",(0,a.jsx)(n.em,{children:"(or unique index)"}),", Jimmer will investigate them one by one."]})]}),"\n",(0,a.jsx)(n.p,{children:"I'll translate the document while maintaining the technical terms as requested."}),"\n",(0,a.jsx)(n.h1,{id:"checking-the-existence-of-associated-objects",children:"Checking the Existence of Associated Objects"}),"\n",(0,a.jsxs)(n.p,{children:["In save commands, associations are divided into ",(0,a.jsx)(n.a,{href:"/jimmer-doc/docs/mutation/save-command/association/classification",children:"long associations and short associations"}),"."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"For long associations, if the associated object doesn't exist, Jimmer will automatically create it first, so there is no issue of non-existent associated objects."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"For short associations, Jimmer assumes that the associated object must exist, and problems will arise if the associated object doesn't exist."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Therefore, this issue is specific to short associations. In the following examples, all associated objects are id-only objects."}),"\n",(0,a.jsxs)(n.p,{children:["In ",(0,a.jsx)(n.a,{href:"../../mapping/base/foreignkey",children:"Mapping/Basic Mapping/Real and Fake Foreign Keys"}),", we introduced that Jimmer supports both real and fake foreign keys.\nOnly real foreign keys involve database constraint violation issues, so we'll discuss them separately."]}),"\n",(0,a.jsx)(n.h3,{id:"fake-foreign-keys",children:"Fake Foreign Keys"}),"\n",(0,a.jsx)(n.p,{children:"For fake foreign keys, there are no foreign key constraints in the database. If the specified associated object doesn't exist, meaning the association ID is invalid, the database has no opinion on this."}),"\n",(0,a.jsx)(n.p,{children:"Therefore, by default, Jimmer doesn't check whether the associated object exists for fake foreign keys, allowing users to save invalid dangling values."}),"\n",(0,a.jsx)(n.p,{children:"Although this is unrelated to the main topic of this article, we'll still explain it. Users can configure the save command to make Jimmer verify the existence of associated objects beforehand."}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["Assume ",(0,a.jsx)(n.code,{children:"Book.store"})," is a fake foreign key"]})}),"\n",(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"List<Book> books = Arrays.asList(\n        Immutables.createBook(draft -> {\n            draft.setId(8L);\n            draft.setStoreId(2L);\n        }),\n        Immutables.createBook(draft -> {\n            draft.setId(9L);\n            draft.setStoreId(999L); // Invalid associated id\n        })\n);\n\nsqlClient\n        .saveEntitiesCommand(books)\n        .setMode(SaveMode.UPDATE_ONLY)\n        // highlight-next-line\n        .setAutoIdOnlyTargetChecking(\n                BookProps.STORE\n        )\n        .execute();\n"})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"val books = listOf(\n    Book {\n        id = 8L\n        storeId = 2L\n    },\n    Book {\n        id = 9L\n        storeId = 999L // Invalid associated id\n    }\n)\n\nsqlClient.updateEntities(books) {\n    // highlight-next-line\n    setAutoIdOnlyTargetChecking(\n        Book::store\n    )\n}\n"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["Here, the ",(0,a.jsx)(n.code,{children:"setAutoIdOnlyTargetChecking"})," method is used to set which short associations need to be verified beforehand."]}),"\n",(0,a.jsx)(n.p,{children:"Before saving the data, Jimmer will verify the association IDs through a query"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select\n    tb_1_.ID\nfrom BOOK_STORE tb_1_\nwhere\n    -- highlight-next-line\n    tb_1_.ID = any(? /* [2, 999] */)\n"})}),"\n",(0,a.jsx)(n.p,{children:"Finally, it throws the following exception"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'#highlight-next-line\norg.babyfish.jimmer.sql.exception.SaveException$IllegalTargetId: \n    Save error caused by the path: "<root>.store": \n    Cannot save the entity, the associated id of the reference \n    property "com.yourcompany.yourproject.model.Book.store" is \n    #highlight-next-line\n    "999" but there is no corresponding associated object in the database\n'})}),"\n",(0,a.jsx)(n.h3,{id:"real-foreign-keys",children:"Real Foreign Keys"}),"\n",(0,a.jsx)(n.p,{children:"For real foreign keys, there are foreign key constraints in the database. If the specified associated object doesn't exist, meaning the association ID is invalid, the database will report a constraint violation error."}),"\n",(0,a.jsx)(n.p,{children:"Without any user configuration, if an error occurs, Jimmer will automatically analyze the error reported by the database to identify the invalid association ID."}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["Assume ",(0,a.jsx)(n.code,{children:"Book.store"})," is a real foreign key"]})}),"\n",(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"List<Book> books = Arrays.asList(\n        Immutables.createBook(draft -> {\n            draft.setId(8L);\n            draft.setStoreId(2L);\n        }),\n        Immutables.createBook(draft -> {\n            draft.setId(9L);\n            // highlight-next-line\n            draft.setStoreId(999L); // Invalid associated id\n        })\n);\n\nsqlClient.updateEntities(books);\n"})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"val books = listOf(\n    Book {\n        id = 8L\n        storeId = 2L\n    },\n    Book {\n        id = 9L\n        // highlight-next-line\n        storeId = 999L // Invalid associated id\n    }\n)\n\nsqlClient.updateEntities(books)\n"})})})]}),"\n",(0,a.jsx)(n.p,{children:"This code will generate two SQL statements"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Batch update data"}),"\n",(0,a.jsxs)(l.A,{groupId:"database",children:[(0,a.jsx)(o.A,{value:"h2",label:"Most Databases",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"update BOOK\nset\n    STORE_ID = ? /*  */\nwhere\n    ID = ? /*  */\n/* batch-0: [2, 8] */\n-- highlight-next-line\n/* batch-1: [999, 9] */\n"})})}),(0,a.jsxs)(o.A,{value:"mysql",label:"Mysql",children:[(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:["By default, MySQL batch operations are not used.\nFor specific details, please refer to ",(0,a.jsx)(n.a,{href:"./mysql",children:"MySQL Issues"})]})}),(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"update BOOK\nset\n    STORE_ID = ? /* 2 */\nwhere\n    ID = ? /* 8 */\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"update BOOK\nset\n    -- highlight-next-line\n    STORE_ID = ? /* 999 */\nwhere\n    ID = ? /* 9 */\n"})}),"\n"]}),"\n"]})]})]}),"\n",(0,a.jsxs)(n.p,{children:["Here, modifying the second record will cause a foreign key constraint violation on the ",(0,a.jsx)(n.code,{children:"STORE_ID"})," column."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Investigate the cause of the constraint violation"}),"\n",(0,a.jsxs)(l.A,{groupId:"database",children:[(0,a.jsx)(o.A,{value:"scenario-1",label:"Scenario 1",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- highlight-next-line\nPurpose: COMMAND(INVESTIGATE_CONSTRAINT_VIOLATION_ERROR)\nSQL: select\n    tb_1_.ID\nfrom BOOK_STORE tb_1_\nwhere\n    tb_1_.ID = ? /* 999 */\n"})})}),(0,a.jsx)(o.A,{value:"scenario-2",label:"Scenario 2",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- highlight-next-line\nPurpose: COMMAND(INVESTIGATE_CONSTRAINT_VIOLATION_ERROR)\nSQL: select\n    tb_1_.ID\nfrom BOOK_STORE tb_1_\nwhere\n    tb_1_.ID = any(? /* [2, 999] */)\n"})})})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Scenario 1"}),"\n",(0,a.jsxs)(n.p,{children:["The row violated the constraint can be located by the ",(0,a.jsx)(n.code,{children:"java.sql.BatchUpdateException"})," thrown by batch operation,\nso only the error row needs to be investigatd"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Scenario 2"}),"\n",(0,a.jsxs)(n.p,{children:["The row violated the constraint can not be located by the ",(0,a.jsx)(n.code,{children:"java.sql.BatchUpdateException"})," thrown by batch operation,\nso all rows need to be investigatd"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Postgres and MySQL with batch capabilities enabled (see ",(0,a.jsx)(n.a,{href:"./mysql",children:"MySQL Issues"}),") both fall into this scenario"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Either way, Jimmer can investigate the problem."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Finally, Jimmer will throw an exception based on the investigation results"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'#highlight-next-line\norg.babyfish.jimmer.sql.exception.SaveException$IllegalTargetId: \n    Save error caused by the path: "<root>.store": \n    Cannot save the entity, the associated id of the reference \n    property "com.yourcompany.yourproject.model.Book.store" is \n    #highlight-next-line\n    "999" but there is no corresponding associated object in the database\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"As you can see, although the automatic error investigation mechanism for real foreign keys and the manual checking mechanism for fake foreign keys are completely different, they produce exactly the same exception information."})}),"\n",(0,a.jsx)(n.h2,{id:"user-exception-translator",children:"User Exception Translator"}),"\n",(0,a.jsx)(n.h3,{id:"exception-translation-interface",children:"Exception Translation Interface"}),"\n",(0,a.jsx)(n.p,{children:"As mentioned earlier, Jimmer investigates database-reported constraint violations and throws exceptions"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"org.babyfish.jimmer.sql.exception.SaveException.NotUnique"})}),"\n",(0,a.jsx)(n.p,{children:"Violation of primary key constraint, unique constraint, or unique index"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"org.babyfish.jimmer.sql.exception.SaveException.IllegalTargetId"})}),"\n",(0,a.jsx)(n.p,{children:"Illegal association ID"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"These two exceptions not only provide detailed error messages but also offer rich APIs to obtain various information."}),"\n",(0,a.jsx)(n.p,{children:"However, this is far from enough. In real projects, we must display easy-to-understand information for end users."}),"\n",(0,a.jsx)(n.p,{children:"Indeed, we can catch and handle exceptions after each save command call. However, Jimmer supports more powerful unified exception translation."}),"\n",(0,a.jsxs)(n.p,{children:["Jimmer provides an exception translation interface ",(0,a.jsx)(n.code,{children:"ExceptionTranslator"}),", the code is as follows"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",metastring:'title="ExceptionTranslator.java"',children:"package org.babyfish.jimmer.sql.runtime;\n\npublic interface ExceptionTranslator<E extends Exception> {\n\n    /**\n     * Translate the exception.\n     *\n     * <p>If the exception is not known how to be translated,\n     * return null or the original argument.</p>\n     */\n    @Nullable\n    Exception translate(@NotNull E exception, @NotNull Args args);\n\n    interface Args {\n        ...omitted...\n    }\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Users can implement this interface through classes ",(0,a.jsx)(n.em,{children:"(note: lambda expressions cannot be used)"})," and specify generic type parameter for the interface, for example:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Translate ",(0,a.jsx)(n.code,{children:"SaveException.NotUnique"})," exception"]}),"\n",(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public class NotUniqueExceptionTranslator\nextends ExceptionTranslator<\n    // highlight-next-line\n    SaveException.NotUnique\n> {\n    ...omitted...\n}\n"})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"class NotUniqueExceptionTranslator :\nExceptionTranslator<\n    // highlight-next-line\n    SaveException.NotUnique\n> {\n    ...omitted...\n}\n"})})})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Translate ",(0,a.jsx)(n.code,{children:"SaveException.IllegalTargetId"})," exception"]}),"\n",(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public class IllegalTargetIdExceptionTranslator\nextends ExceptionTranslator<\n    // highlight-next-line\n    SaveException.IllegalTargetId\n> {\n    ...omitted...\n}\n"})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"class IllegalTargetIdExceptionTranslator :\nExceptionTranslator<\n    // highlight-next-line\n    SaveException.IllegalTargetId\n> {\n    ...omitted...\n}\n"})})})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"You can even translate other JDBC exceptions that Jimmer is not interested in"}),"\n",(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public class SQLExceptionTranslator\nextends ExceptionTranslator<\n    // highlight-next-line\n    java.sql.SQLException\n> {\n    ...omitted...\n}\n"})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"class SQLExceptionTranslator :\nExceptionTranslator<\n    // highlight-next-line\n    java.sql.SQLException\n> {\n    ...omitted...\n}\n"})})})]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"multiple-registration-methods",children:"Multiple Registration Methods"}),"\n",(0,a.jsx)(n.p,{children:"Just writing a class to implement this interface is useless; you must create an object and register it to Jimmer take effect."}),"\n",(0,a.jsxs)(n.p,{children:["Jimmer provides two registration methods, taking the ",(0,a.jsx)(n.code,{children:"NotUniqueExceptionTranslator"})," mentioned above as an example:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Global registration, which can be divided into two types"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Not using Jimmer's spring starter"}),"\n",(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"JSqlClient sqlClient = JSqlClient\n    .newBuilder()\n    // highlight-next-line\n    .addExceptionTranslator(\n        new NotUniqueExceptionTranslator()\n    )\n    ...other configurations omitted...\n    .build();\n"})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"val sqlClient = sqlClient {\n    // highlight-next-line\n    addExceptionTranslator(\n        NotUniqueExceptionTranslator()\n    )\n    ...other configurations omitted...\n}\n"})})})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Using Jimmer's spring starter"}),"\n",(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"// highlight-next-line\n@Component\npublic class NotUniqueExceptionTranslator\nextends ExceptionTranslator<SaveException.NotUnique> {\n    ...omitted...\n}\n"})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"// highlight-next-line\n@Component\nclass NotUniqueExceptionTranslator :\nExceptionTranslator<SaveException.NotUnique> {\n    ...omitted...\n}\n"})})})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Register for specific save commands"}),"\n",(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Book book = ...omitted...;\n\nsqlClient\n    .saveCommand(book)\n    // highlight-next-line\n    .addExceptionTranslator(\n        new NotUniqueExceptionTranslator()\n    )\n    .execute()\n"})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"val book: Book = ...omitted...\n\nsqlClient.save(book) {\n    // highlight-next-line\n    addExceptionTranslator(\n        new NotUniqueExceptionTranslator()\n    )\n}\n"})})})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"implementing-the-translate-method",children:["Implementing the ",(0,a.jsx)(n.code,{children:"translate"})," Method"]}),"\n",(0,a.jsxs)(n.p,{children:["Finally, let's show how to implement the ",(0,a.jsx)(n.code,{children:"translate"})," method"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Translate ",(0,a.jsx)(n.code,{children:"SaveException.NotUnique"})," exception"]}),"\n",(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Component\npublic class NotUniqueExceptionTranslator\nextends ExceptionTranslator<SaveException.NotUnique> {\n    \n    @Override\n    public @Nullable Exception translate(\n        @NotNull SaveException.NotUnique exception, \n        @NotNull Args args\n    ) {\n        \n        // highlight-next-line\n        if (exception.isMatched(BookProps.ID)) {\n            return new IllegalArgumentException(\n                    "Book with ID " +\n                            exception.getValue(BookProps.ID) +\n                            " already exists"\n            );\n        }\n        \n        // highlight-next-line\n        if (exception.isMatched(BookProps.NAME, BookProps.EDITION)) {\n            return new IllegalArgumentException(\n                    "Book with name " +\n                            exception.getValue(BookProps.NAME) +\n                            " and edition " +\n                            exception.getValue(BookProps.EDITION) +\n                            " already exists"\n            );\n        }\n        \n        //No processing needed, can also be written as `return exception`\n        return null;\n    }\n}\n'})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'@Component\nclass NotUniqueExceptionTranslator :\nExceptionTranslator<SaveException.NotUnique> {\n\n    override fun translate(\n        exception: NotUnique, \n        args: ExceptionTranslator.Args\n    ): Exception? =\n        when {\n            // highlight-next-line\n            exception.isMatched(Book::id) ->\n                throw IllegalArgumentException(\n                    "Book with ID ${exception[Book::id]} already exists"\n                )\n            // highlight-next-line\n            exception.isMatched(Book::name, Book::edition) ->\n                throw IllegalArgumentException(\n                    "Book with name ${\n                        exception[Book::id]\n                    } and edition ${\n                        exception[Book::edition]\n                    } already exists"\n                )\n            else ->\n                null //No processing needed, can also be written as `exception`\n        }\n}\n'})})})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Translate ",(0,a.jsx)(n.code,{children:"SaveException.IllegalTargetId"})," exception"]}),"\n",(0,a.jsxs)(l.A,{groupId:"language",children:[(0,a.jsx)(o.A,{value:"java",label:"Java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Component\npublic class IllegalTargetIdExceptionTranslator\nextends ExceptionTranslator<SaveException.IllegalTargetId> {\n    \n    @Override\n    public @Nullable Exception translate(\n            @NotNull SaveException.IllegalTargetId exception,\n            @NotNull Args args\n    ) {\n        if (exception.getProp() == BookProps.STORE.unwrap()) {\n            throw new IllegalArgumentException(\n                    "Cannot set invalid associated store ID for book: " +\n                            exception.getTargetIds()\n            );\n        }\n\n        // No processing needed, can also be written as `return exception`\n        return null;\n    }\n}\n'})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'@Component\nclass IllegalTargetIdExceptionTranslator :\nExceptionTranslator<SaveException.IllegalTargetId> {\n\n    override fun translate(\n        exception: IllegalTargetId,\n        args: ExceptionTranslator.Args\n    ): Exception? =\n        when {\n            // highlight-next-line\n            exception.prop == BookProps.STORE.unwrap() ->\n                throw IllegalArgumentException(\n                    "Cannot set invalid associated store ID for book: ${\n                        exception.targetIds\n                    }"\n                )\n            else ->\n                null //No processing needed, can also be written as `exception`\n        }\n}\n'})})})]}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>l});t(96540);var i=t(34164);const a={tabItem:"tabItem_Ymn6"};var s=t(74848);function l(e){let{children:n,hidden:t,className:l}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)(a.tabItem,l),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>y});var i=t(96540),a=t(34164),s=t(23104),l=t(56347),o=t(205),r=t(57485),c=t(31682),d=t(70679);function h(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:a}}=e;return{value:n,label:t,attributes:i,default:a}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function x(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const a=(0,l.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,r.aZ)(s),(0,i.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=u(e),[l,r]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!x({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:s}))),[c,h]=p({queryString:t,groupId:a}),[g,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,d.Dv)(t);return[a,(0,i.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),j=(()=>{const e=c??g;return x({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{j&&r(j)}),[j]);return{selectedValue:l,selectValue:(0,i.useCallback)((e=>{if(!x({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);r(e),h(e),m(e)}),[h,m,s]),tabValues:s}}var m=t(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function f(e){let{className:n,block:t,selectedValue:i,selectValue:l,tabValues:o}=e;const r=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=r.indexOf(n),a=o[t].value;a!==i&&(c(n),l(a))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=r.indexOf(e.currentTarget)+1;n=r[t]??r[0];break}case"ArrowLeft":{const t=r.indexOf(e.currentTarget)-1;n=r[t]??r[r.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>r.push(e),onKeyDown:h,onClick:d,...s,className:(0,a.A)("tabs__item",j.tabItem,s?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===s));return e?(0,i.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function I(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,a.A)("tabs-container",j.tabList),children:[(0,b.jsx)(f,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function y(e){const n=(0,m.A)();return(0,b.jsx)(I,{...e,children:h(e.children)},String(n))}},66971:(e,n,t)=>{t.d(n,{a:()=>g});var i=t(96540),a=t(72774),s=t(63051),l=t(28968),o=t(48875),r=t(44676),c=t(47859),d=t(4671),h=t(99343),u=t(7324),x=t(39781),p=t(74848);const g=(0,i.memo)((e=>{let{open:n,fullScreen:t=!1,title:o,maxWidth:g="md",onClose:j,children:b}=e;const[f,v]=(0,i.useState)(t),I=(0,i.useCallback)((()=>{v((e=>!e))}),[]);return(0,p.jsxs)(s.A,{open:n,onClose:j,fullScreen:f,TransitionComponent:m,maxWidth:g,children:[(0,p.jsx)(a.A,{sx:{position:"relative"},children:(0,p.jsxs)(r.A,{children:[(0,p.jsx)(c.A,{sx:{ml:2,flex:1},variant:"h6",component:"div",children:o}),(0,p.jsx)(d.A,{onClick:I,style:{color:"white"},children:f?(0,p.jsx)(u.A,{}):(0,p.jsx)(h.A,{})}),(0,p.jsx)(d.A,{"aria-label":"close",onClick:j,style:{color:"white"},children:(0,p.jsx)(x.A,{})})]})}),(0,p.jsx)(l.A,{children:b})]})})),m=i.forwardRef((function(e,n){return(0,p.jsx)(o.A,{direction:"up",ref:n,...e})}))},74400:(e,n,t)=>{t.d(n,{l:()=>o});var i=t(96540),a=t(67512),s=t(66971),l=t(74848);const o=(0,i.memo)((e=>{let{buttonText:n,fullScreen:t=!1,title:o=n,variant:r="outlined",large:c=!1,maxWidth:d,useOriginalText:h=!0,children:u}=e;const[x,p]=(0,i.useState)(!1),g=(0,i.useCallback)((e=>{p(!0),e.stopPropagation?e.stopPropagation():e.cancelBubble=!0}),[]),m=(0,i.useCallback)((()=>{p(!1)}),[]),j=h?{textTransform:"none"}:{};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(a.A,{"data-is-view-more-button":"true",onClick:g,variant:r,size:c?"large":"small",style:j,children:n}),(0,l.jsx)(s.a,{open:x,onClose:m,title:o,maxWidth:d,fullScreen:t,children:u})]})}))},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(96540);const a={},s=i.createContext(a);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);